#! /bin/sh

# load Xresources
xrdb -merge $HOME/.Xresources

# run the xrandr command if an external monitor is connected to the
# laptop.  This must be executed before the polybar command, so that
# polybar can set the two separate bars properly.
external_monitor_name=$(xrandr --query | grep -v -w eDP-1 | grep -w connected | awk '{print $1}')

# check if there is an external monitor
if [ -n "$external_monitor_name" ]; then
	echo "found external monitor $external_monitor_name"
	# export two env variable to be used by polybar
	export MAIN_MONITOR=$external_monitor_name
	export SECOND_MONITOR="eDP-1"
	# configure the two monitors
	# xrandr --output $external_monitor_name --primary --mode 1920x1080 --right-of eDP-1 --output eDP-1 --mode 1920x1080
	xrandr --output $external_monitor_name --primary --mode 3440x1440 --right-of eDP-1 --output eDP-1 --mode 1920x1080

	bspc monitor $external_monitor_name -d 1 2 3 4 5 6
	bspc monitor eDP-1 -d 7 8 9
	bspc monitor $external_monitor_name -s eDP-1
else
	echo "no external monitors detected"
	export MAIN_MONITOR="eDP-1"
	unset SECOND_MONITOR

	bspc monitor eDP-1 -d 1 2 3 4 5 6
fi

$XDG_CONFIG_HOME/polybar/launch.sh

pgrep -x sxhkd > /dev/null || sxhkd &

bspc config border_width         3
bspc config window_gap           5

bspc config split_ratio          0.52
bspc config borderless_monocle   true
bspc config gapless_monocle      true
bspc config focus_follows_pointer true
bspc config pointer_follows_monitor true

bspc config focused_border_color \#466349
bspc config normal_border_color \#303030
# disable focus stealing
bspc config ignore_ewmh_focus true

# scratchpad
bspc rule -a scratchpad sticky=on state=floating hidden=on

$HOME/.config/bspwm/bspwmrc_rules

killall picom
picom --config $HOME/.config/picom/picom.conf --experimental-backend &

echo "finish bspwmrc loading"
xset s off -dpms

# launch the matplotlib tabber
killall automatic_tabbed
$HOME/.config/bspwm/automatic_tabbed &
